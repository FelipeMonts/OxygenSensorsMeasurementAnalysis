dat.2<-merge(dat.2.dat, dat.2.Signal, by="TIME");
dat.2.dat
dat.2.Signal
xyplot(Signal_B13SppNA5cmO2_Avg + Signal_B13SppNA20cmO2_Avg + Signal_B13SppNB5cmO2_Avg + Signal_B13SppNB20cmO2_Avg + Signal_B13SppNC5cmO2_Avg + Signal_B13SppNC20cmO2_Avg  ~ TIME, data=dat.1, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
str(dat.1.dat)
#### using mapply to subtract the offset from the O2 Data
mapply('-', dat.1.dat[,c(5,7,9,11,13,15)], c(4.13)) ;
#### using mapply to divide the offset corrected data by the CF
mapply('/', mapply('-', dat.1.dat[,c(5,7,9,11,13,15)], c(4.13), SIMPLIFY = F), c(6.057), SIMPLIFY = T) ;
### combining both operations into one
dat.1.Signal<-data.frame(mapply('/', mapply('-', dat.1.dat[,c(5,7,9,11,13,15)], c(4.13), SIMPLIFY = F), c(6.057) , SIMPLIFY = T)) ;
names(dat.1.Signal)<-paste0("Signal_", names(dat.1.dat[c(5,7,9,11,13,15)])) ;
dat.1<- cbind(dat.1.dat , dat.1.Signal);
dat.2.Signal<-data.frame(mapply('/', mapply('-', dat.2.dat[,c(5,7,9,11,13,15)], c(4.13), SIMPLIFY = F), c(6.057) , SIMPLIFY = T)) ;
names(dat.2.Signal)<-paste0("Signal_", names(dat.2.dat[c(5,7,9,11,13,15)])) ;
dat.2<- cbind(dat.2.dat , dat.2.Signal);
dat.3.Signal<-data.frame(mapply('/', mapply('-', dat.3.dat[,c(5,7,9,11,13,15)], c(4.13), SIMPLIFY = F), c(6.057) , SIMPLIFY = T)) ;
names(dat.3.Signal)<-paste0("Signal_", names(dat.3.dat[c(5,7,9,11,13,15)])) ;
dat.3<- cbind(dat.3.dat , dat.3.Signal);
dat.4.Signal<-data.frame(mapply('/', mapply('-', dat.4.dat[,c(5,7,9,11,13,15)], c(4.13), SIMPLIFY = F), c(6.057) , SIMPLIFY = T)) ;
names(dat.4.Signal)<-paste0("Signal_", names(dat.4.dat[c(5,7,9,11,13,15)])) ;
dat.4<- cbind(dat.4.dat , dat.4.Signal);
dat.5.Signal<-data.frame(mapply('/', mapply('-', dat.5.dat[,c(5,7,9,11,13,15)], c(4.13), SIMPLIFY = F), c(6.057) , SIMPLIFY = T)) ;
names(dat.5.Signal)<-paste0("Signal_", names(dat.5.dat[c(5,7,9,11,13,15)])) ;
dat.5<- cbind(dat.5.dat , dat.5.Signal);
dat.6.Signal<-data.frame(mapply('/', mapply('-', dat.6.dat[,c(5,7,9,11,13,15)], c(4.13), SIMPLIFY = F), c(6.057) , SIMPLIFY = T)) ;
names(dat.6.Signal)<-paste0("Signal_", names(dat.6.dat[c(5,7,9,11,13,15)])) ;
dat.6<- cbind(dat.6.dat , dat.6.Signal);
## plotting dat.1.dat
## Using the package Lattice
xyplot(Signal_B13SppNA5cmO2_Avg + Signal_B13SppNA20cmO2_Avg + Signal_B13SppNB5cmO2_Avg + Signal_B13SppNB20cmO2_Avg + Signal_B13SppNC5cmO2_Avg + Signal_B13SppNC20cmO2_Avg  ~ TIME, data=dat.1, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
xyplot(Signal_B13SppNA5cmO2_Avg + Signal_B13SppNA20cmO2_Avg + Signal_B13SppNB5cmO2_Avg + Signal_B13SppNB20cmO2_Avg + Signal_B13SppNC5cmO2_Avg + Signal_B13SppNC20cmO2_Avg  ~ TIME, data=dat.2, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
dat.2<- cbind(dat.2.dat , dat.2.Signal);
xyplot(Signal_B13SppNA5cmO2_Avg + Signal_B13SppNA20cmO2_Avg + Signal_B13SppNB5cmO2_Avg + Signal_B13SppNB20cmO2_Avg + Signal_B13SppNC5cmO2_Avg + Signal_B13SppNC20cmO2_Avg  ~ TIME, data=dat.2, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
dat.2
dat.2
Plot.dat.1<-xyplot(B13SppNA5cmO2_Avg + B13SppNA20cmO2_Avg + B13SppNB5cmO2_Avg + B13SppNB20cmO2_Avg + B13SppNC5cmO2_Avg + B13SppNC20cmO2_Avg + OXYBaseOxygen  ~TIME, data=dat.1, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
Plot.dat.1<-xyplot(B13SppNA5cmO2_Avg + B13SppNA20cmO2_Avg + B13SppNB5cmO2_Avg + B13SppNB20cmO2_Avg + B13SppNC5cmO2_Avg + B13SppNC20cmO2_Avg   ~TIME, data=dat.1, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
Plot.dat.1
Plot.dat.2.dat<-xyplot(B43SppNA5cmO2_Avg + B43SppNA20cmO2_Avg + B43SppNB5cmO2_Avg + B43SppNB20cmO2_Avg + B43SppNC5cmO2_Avg + B43SppNC20cmO2_Avg   ~TIME, data=dat.2, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
Plot.dat.2.dat
Plot.dat.1<-xyplot(Signal_B13SppNA5cmO2_Avg + Signal_B13SppNA20cmO2_Avg + Signal_B13SppNB5cmO2_Avg + Signal_B13SppNB20cmO2_Avg + Signal_B13SppNC5cmO2_Avg + Signal_B13SppNC20cmO2_Avg   ~TIME, data=dat.1, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
Plot.dat.1
Plot.dat.2.dat<-xyplot(Signal_B43SppNA5cmO2_Avg + Signal_B43SppNA20cmO2_Avg + Signal_B43SppNB5cmO2_Avg + Signal_B43SppNB20cmO2_Avg + Signal_B43SppNC5cmO2_Avg + Signal_B43SppNC20cmO2_Avg   ~ TIME, data=dat.2, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
Plot.dat.2
Plot.dat.2.dat<-xyplot(Signal_B43SppNA5cmO2_Avg + Signal_B43SppNA20cmO2_Avg + Signal_B43SppNB5cmO2_Avg + Signal_B43SppNB20cmO2_Avg + Signal_B43SppNC5cmO2_Avg + Signal_B43SppNC20cmO2_Avg   ~ TIME, data=dat.2, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
Plot.dat.2<-xyplot(Signal_B43SppNA5cmO2_Avg + Signal_B43SppNA20cmO2_Avg + Signal_B43SppNB5cmO2_Avg + Signal_B43SppNB20cmO2_Avg + Signal_B43SppNC5cmO2_Avg + Signal_B43SppNC20cmO2_Avg   ~ TIME, data=dat.2, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
Plot.dat.2<-xyplot(Signal_B43SppNA5cmO2_Avg + Signal_B43SppNA20cmO2_Avg + Signal_B43SppNB5cmO2_Avg + Signal_B43SppNB20cmO2_Avg + Signal_B43SppNC5cmO2_Avg + Signal_B43SppNC20cmO2_Avg   ~ TIME, data=dat.2, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
Plot.dat.2
Plot.dat.3<-xyplot(Signal_B33SppNA5cmO2_Avg + Signal_B33SppNA20cmO2_Avg + Signal_B33SppNB5cmO2_Avg + Signal_B33SppNB20cmO2_Avg + Signal_B33SppNC5cmO2_Avg + Signal_B33SppNC20cmO2_Avg  ~ TIME, data=dat.3, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
Plot.dat.3
Plot.dat.4<-xyplot(Signal_B1TriticaleA5cmO2_Avg + Signal_B1TriticaleA20cmO2_Avg + Signal_B1TriticaleB5cmO2_Avg + Signal_B1TriticaleB20cmO2_Avg + Signal_B1TriticaleC5cmO2_Avg + Signal_B1TriticaleC20cmO2_Avg  ~ TIME, data=dat.4, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
Plot.dat.4
Plot.dat.5<-xyplot(Signal_B23SppNA5cmO2_Avg + Signal_B23SppNA20cmO2_Avg + Signal_B23SppNB5cmO2_Avg + Signal_B23SppNB20cmO2_Avg + Signal_B23SppNC5cmO2_Avg + Signal_B23SppNC20cmO2_Avg  ~ TIME, data=dat.5, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
Plot.dat.5
Plot.dat.6<-xyplot(Signal_B3TriticaleA5cmO2_Avg + Signal_B3TriticaleA20cmO2_Avg + Signal_B3TriticaleB5cmO2_Avg + Signal_B3TriticaleB20cmO2_Avg + Signal_B3TriticaleC5cmO2_Avg + Signal_B3TriticaleC20cmO2_Avg ~ TIME, data=dat.6, xlim=c(as.POSIXct("2021-06-24 18:00"),as.POSIXct("2021-06-24 20:00")),auto.key = T, type="l") ;
Plot.dat.6
Plot.dat.2
##############################################################################################################
#
#
# Program to Analyze and plot Oxygen sesnsor data collected from Apogee O2 201 Sensors  and CR1000 dataloggers
#
#  Installed in the CCC Strategic tillage experiment
#
#
# Felipe Montes 2021/08/26
#
#
###############################################################################################################
###############################################################################################################
#                             Tell the program where the package libraries are stored
###############################################################################################################
#  Tell the program where the package libraries are  #####################
.libPaths("C:/Felipe/SotwareANDCoding/R_Library/library")  ;
#                             Setting up working directory  Loading Packages and Setting up working directory
###############################################################################################################
#      set the working directory
# readClipboard() Willow Rock Spring\\SkyCap_SelectionTrial\\DataCollection") ;   #
"https://pennstateoffice365.sharepoint.com/:f:/s/StrategicTillageAndN2O/Ehl9Lh_gza5FiOtKIyDD7MQBOKFdFk6h_k4EEYEktWJUYw?e=uYLqL0"
#setwd("C:\\Felipe\\Willow_Project\\Willow_Experiments\\
###############################################################################################################
#                            Install the packages that are needed
###############################################################################################################
###############################################################################################################
#                           load the libraries that are needed
###############################################################################################################
library(openxlsx)
library(lattice)
Directory.List<-list.files(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\", DownloadDate , "\\", O2.Directory, "\\CR1000_Oxygen.dat"));
DownloadDate = "20210903Download"  ;
O2.Directory ="B4Triticale" ;
Directory.List<-list.files(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\", DownloadDate , "\\", O2.Directory, "\\CR1000_Oxygen.dat"));
O2.Data.1.Names<-read.csv(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\20210825Download\\",O2.Directory, "\\CR1000_Oxygen.dat"), header=F, skip=1, nrows=1)
Directory.List
paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\", DownloadDate , "\\", O2.Directory, "\\CR1000_Oxygen.dat")
Directory.List<-list.files(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\", DownloadDate , "\\", O2.Directory, "\\CR1000_Oxygen.dat"));
Directory.List<-list.files(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\", DownloadDate , "\\", O2.Directory));
Directory.List
DownloadDate = "20210903Download"  ;
O2.Directory ="B4Triticale" ;
CampbellSci.files<-c("CR1000_DataTableInfo.dat" , "CR1000_Oxygen.dat" ,       "CR1000_Public.dat"  ,      "CR1000_Status.dat" ) ;
paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\20210825Download\\",O2.Directory, "\\",CampbellSci.files[1] )
O2.Data.1.Names<-read.csv(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\20210825Download\\",O2.Directory, "\\",CampbellSci.files[1] ), header=F, skip=1, nrows=1)
View(O2.Data.1.Names)
View(O2.Data.1.Names)
View(O2.Data.1.Names)
O2.Data.1<-read.csv(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\20210825Download\\",O2.Directory, "\\CR1000_Oxygen.dat"), header=F, skip=4, nrows=-1)
O2.Data.1<-read.csv(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\20210825Download\\",O2.Directory, "\\",CampbellSci.files[1] ), header=F, skip=4, nrows=-1) ;
View(O2.Data.1)
View(O2.Data.1)
names(O2.Data.1)<-O2.Data.1.Names[1,] ;
View(O2.Data.1)
Directory.List<-list.files(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\", DownloadDate , "\\", O2.Directory));
O2.Data.1.Names<-read.csv(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\20210825Download\\",O2.Directory, "\\",CampbellSci.files[2] ), header=F, skip=1, nrows=1)
O2.Data.1<-read.csv(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\20210825Download\\",O2.Directory, "\\",CampbellSci.files[2] ), header=F, skip=4, nrows=-1) ;
names(O2.Data.1)<-O2.Data.1.Names[1,] ;
View(O2.Data.1)
str(O2.Data.1)
O2.Data.1$TIME<-as.POSIXct(O2.Data.1$TIMESTAMP) ;
str(O2.Data.1)
O2.Data.1[grep("B4",PeakArea.results$Sample.Name),c("BLOCK")] <- c(4) ;
##############################################################################################################
#
#
# Program to Analyze and plot Oxygen sensor data collected from Apogee O2 201 Sensors  and CR1000 data loggers
#
#  Installed in the CCC Strategic tillage experiment
#
#
# Felipe Montes 2021/08/26
#
#
###############################################################################################################
###############################################################################################################
#                             Tell the program where the package libraries are stored
###############################################################################################################
#  Tell the program where the package libraries are  #####################
.libPaths("C:/Felipe/SotwareANDCoding/R_Library/library")  ;
###############################################################################################################
#                             Setting up working directory  Loading Packages and Setting up working directory
###############################################################################################################
#      set the working directory
# readClipboard() Willow Rock Spring\\SkyCap_SelectionTrial\\DataCollection") ;   #
"https://pennstateoffice365.sharepoint.com/:f:/s/StrategicTillageAndN2O/Ehl9Lh_gza5FiOtKIyDD7MQBOKFdFk6h_k4EEYEktWJUYw?e=uYLqL0"
#setwd("C:\\Felipe\\Willow_Project\\Willow_Experiments\\
###############################################################################################################
#                            Install the packages that are needed
###############################################################################################################
install.packages("magick", dependencies = T)
install.packages("jpeg", dependencies = T)
library(openxlsx)
library(lattice)
library(jpeg)
library(magick)
install.packages("Rcpp", dependencies = T)
install.packages("Rcpp", dependencies = T)
###############################################################################################################
#                            Install the packages that are needed
###############################################################################################################
install.packages("magick", dependencies = T)
library(openxlsx)
library(lattice)
library(jpeg)
library(magick)
DownloadDate = "20210903Download"  ;
O2.Directory ="B1Clover" ;
CampbellSci.files<-c("CR1000_DataTableInfo.dat" , "CR1000_Oxygen.dat" ,       "CR1000_Public.dat"  ,      "CR1000_Status.dat" ) ;
### Read the data
Directory.List<-list.files(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\", DownloadDate , "\\", O2.Directory));
O2.Data.1.Names<-read.csv(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\20210825Download\\",O2.Directory, "\\",CampbellSci.files[2] ), header=F, skip=1, nrows=1)
O2.Data.1<-read.csv(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\O2Sensors\\20210825Download\\",O2.Directory, "\\",CampbellSci.files[2] ), header=F, skip=4, nrows=-1) ;
names(O2.Data.1)<-O2.Data.1.Names[1,] ;
str(O2.Data.1)
### Prepare a detailed and well formatted data frame for data analysis and exploration
O2.Data.1$TIME<-as.POSIXct(O2.Data.1$TIMESTAMP) ;
O2.Data.1$BLOCK<-c("NONE") ;
O2Picture<-readJPEG(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Pictures\\Pictures_O2Sensors_20210927\\IMG_0073.JPG")) ;
O2Picture2<-image_read(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Pictures\\Pictures_O2Sensors_20210927\\IMG_0073.JPG")))
O2Picture2<-image_read(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Pictures\\Pictures_O2Sensors_20210927\\IMG_0073.JPG"))
O2Picture3<-image_rotate(O2Picture2, 90)
O2Picture3
O2Picture2
plot(O2.Data.1$TIME,O2.Data.1$B1CloverC5cmO2_Med, col="RED" ) #, ylim=c(8,12) )
rasterImage(O2Picture2,xleft=as.POSIXct("2021-08-23 11:30:00 EDT"), ybottom=8.6, xright =as.POSIXct("2021-08-25 09:30:00 EDT") , ytop = 9.0)
plot(O2.Data.1$TIME,O2.Data.1$B1CloverC5cmO2_Med, col="RED" ) #, ylim=c(8,12) )
rasterImage(O2Picture3,xleft=as.POSIXct("2021-08-23 11:30:00 EDT"), ybottom=8.6, xright =as.POSIXct("2021-08-25 09:30:00 EDT") , ytop = 9.0)
O2Picture3<-image_rotate(O2Picture2, -90)
plot(O2.Data.1$TIME,O2.Data.1$B1CloverC5cmO2_Med, col="RED" ) #, ylim=c(8,12) )
rasterImage(O2Picture3,xleft=as.POSIXct("2021-08-23 11:30:00 EDT"), ybottom=8.6, xright =as.POSIXct("2021-08-25 09:30:00 EDT") , ytop = 9.0)
plot(O2.Data.1$TIME,O2.Data.1$B1CloverC5cmO2_Med, col="RED" ) #, ylim=c(8,12) )
rasterImage(O2Picture3,xleft=as.POSIXct("2021-08-23 11:30:00 EDT"), ybottom=8.6, xright =as.POSIXct("2021-08-23 20:30:00 EDT") , ytop = 9.0)
readClipboard()
Precipitation<-read.csv("C:\\Users\\frm10\\Downloads\\2036_18_YEAR=2021.csv" , header= T)
Precipitation<-read.csv("C:\\Users\\frm10\\Downloads\\2036_18_YEAR=2021.csv" , header= T, skip=3)
View(Precipitation)
View(Precipitation)
str(Precipitation)
Precipitation$Date.Time<-paste0(Precipitation$Date," ", Precipitation$Time)
Precipitation$Date.Time
str(O2.Data.1)
Precipitation$Date.Time<-as.POSIXct(paste0(Precipitation$Date," ", Precipitation$Time))
str(Precipitation)
Precipitation$Date.Time<-as.POSIXct(paste0(Precipitation$Date," ", Precipitation$Time),format="%Y-%m-%d %H:%M")
str(Precipitation)
plot(Precipitation$Date.Time, Precipitation$PRCP.H.1..in.)
plot(Precipitation$Date.Time, Precipitation$PRCP.H.1..in., xlim=c(as.POSIXct("2021-08-23 11:30:00 EDT"), as.POSIXct("2021-08-25 11:30:00 EDT")))
plot(Precipitation$Date.Time, Precipitation$PRCP.H.1..in., xlim=c(as.POSIXct("2021-05-23 11:30:00 EDT"), as.POSIXct("2021-08-25 11:30:00 EDT")))
plot(Precipitation$Date.Time, Precipitation$PRCP.H.1..in., xlim=c(as.POSIXct("2021-08-20 11:30:00 EDT"), as.POSIXct("2021-08-30 11:30:00 EDT")))
O2.Data.Alli<-read.csv("09172021B1Clover.dat", skip=1, header=T);
O2.Data.Alli
O2.Data.Alli<-read.csv("09172021B1Clover.dat", skip=1, header=T, nrows = 1);
O2.Data.Alli
O2.Data.Alli<-read.csv("09172021B1Clover.dat", skip=1, header=T, nrows = 2);
O2.Data.Alli
O2.Data.Alli<-read.csv("09172021B1Clover.dat", skip=1, header=T, nrows = 1);
O2.Data.Alli
O2.Data.Alli<-read.csv("09172021B1Clover.dat", skip=1, header=T);
O2.Data.Alli
O2.Data.Alli.names<-read.csv("09172021B1Clover.dat", skip=1, header=T, nrows=1);
O2.Data.Alli.data<-read.csv("09172021B1Clover.dat", skip=3, header=F);
O2.Data.Alli.data
O2.Data.Alli.data<-read.csv("09172021B1Clover.dat", skip=4, header=F);
O2.Data.Alli.data<-read.csv("09172021B1Clover.dat", skip=4, header=F);
O2.Data.Alli.data
O2.Data.Alli.names
names(O2.Data.Alli.names)
names(O2.Data.Alli.data)<-names(O2.Data.Alli.names)
O2.Data.Alli.data
str(O2.Data.Alli.data)
O2.Data.Alli.data$TIME<-as.POSIXct(O2.Data.Alli.data$TIMESTAMP) ;
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, col="RED" ) #, ylim=c(8,12) )
min(O2.Data.Alli.data$TIME)
max(O2.Data.Alli.data$TIME)
which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME))
Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),]
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")])
postscript(file="B1CloverC" , onefile=F, width=8, height=4, paper= "letter", family='Times') ;
par(mar=c(3,5,1,4)+0.1);
Pcp.range<-range(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")])
Pcp.range
#  plot the pcp
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
invisible(dev.off())
par(mar=c(3,5,1,4)+0.1);
#  plot the pcp
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
axis(side = 3, pos = 0, tck = 0,xaxt = "n") ;
axis(side = 4, at = pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))),labels=pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))), font=2, cex.axis=1.1) ;
mtext(side=4,"Precipitation mm",line = 2, cex = 1.3, adj = 0.95, font=2) ;
#add Temp  plot
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
#add Temp  plot
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=F, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
DateTime.range<-range(Precipitation$Date.Time) ;
DateTime.range
DateTime.range<-range(O2.Data.Alli.data$TIME) ;
DateTime.range
#add axis with appropriate labels
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range.2[2],by='day'), font=2, cex.axis=1.2)
#add axis with appropriate labels
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range[2],by='day'), font=2, cex.axis=1.2)
seq(DateTime.range[1],DateTime.range[2],by='day')
par(mar=c(3,5,1,4)+0.1);
#  plot the pcp
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
# add axis with proper labeling
axis(side = 3, pos = 0, tck = 0,xaxt = "n") ;
axis(side = 4, at = pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))),labels=pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))), font=2, cex.axis=1.1) ;
mtext(side=4,"Precipitation in",line = 2, cex = 1.3, adj = 0.95, font=2) ;
#add Temp  plot
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=F, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
#add axis with appropriate labels
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range[2],by='day'), font=2, cex.axis=1.2)
#axis.POSIXct(side=1,University.Park.Temp.Pcp$Date.Year.Month, at=seq(DateTime.range[1],DateTime.range[2],length.out=5),labels=format(seq(DateTime.range[1],DateTime.range[2],length.out=5),"%Y")) ;
axis(side=2,at=pretty(seq(-25,40,length=15)), font=2, cex.axis=1.2) ;
postscript(file="B1CloverC" , onefile=F, width=8, height=4, paper= "letter", family='Times') ;
par(mar=c(3,5,1,4)+0.1);
#  plot the pcp
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
# add axis with proper labeling
axis(side = 3, pos = 0, tck = 0,xaxt = "n") ;
axis(side = 4, at = pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))),labels=pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))), font=2, cex.axis=1.1) ;
mtext(side=4,"Precipitation in",line = 2, cex = 1.3, adj = 0.95, font=2) ;
#add Temp  plot
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=F, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
#coordinates for the Temp max min polygon
#  View(University.Park.Temp.Pcp) ; str(University.Park.Temp.Pcp)  ; names(University.Park.Temp.Pcp)
#add axis with appropriate labels
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range[2],by='day'), font=2, cex.axis=1.2)
#axis.POSIXct(side=1,University.Park.Temp.Pcp$Date.Year.Month, at=seq(DateTime.range[1],DateTime.range[2],length.out=5),labels=format(seq(DateTime.range[1],DateTime.range[2],length.out=5),"%Y")) ;
axis(side=2,at=pretty(seq(-25,40,length=15)), font=2, cex.axis=1.2) ;
invisible(dev.off())
postscript(file="B1CloverC.eps" , onefile=F, width=8, height=4, paper= "letter", family='Times') ;
par(mar=c(3,5,1,4)+0.1);
#  plot the pcp
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
# add axis with proper labeling
axis(side = 3, pos = 0, tck = 0,xaxt = "n") ;
axis(side = 4, at = pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))),labels=pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))), font=2, cex.axis=1.1) ;
mtext(side=4,"Precipitation in",line = 2, cex = 1.3, adj = 0.95, font=2) ;
#add Temp  plot
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=F, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
#coordinates for the Temp max min polygon
#  View(University.Park.Temp.Pcp) ; str(University.Park.Temp.Pcp)  ; names(University.Park.Temp.Pcp)
#add axis with appropriate labels
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range[2],by='day'), font=2, cex.axis=1.2)
#axis.POSIXct(side=1,University.Park.Temp.Pcp$Date.Year.Month, at=seq(DateTime.range[1],DateTime.range[2],length.out=5),labels=format(seq(DateTime.range[1],DateTime.range[2],length.out=5),"%Y")) ;
axis(side=2,at=pretty(seq(-25,40,length=15)), font=2, cex.axis=1.2) ;
invisible(dev.off())
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range[2],by='day'), font=2, cex.axis=1.2)
par(mar=c(3,5,1,4)+0.1);
#  plot the pcp
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
# add axis with proper labeling
axis(side = 3, pos = 0, tck = 0,xaxt = "n") ;
axis(side = 4, at = pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))),labels=pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))), font=2, cex.axis=1.1) ;
mtext(side=4,"Precipitation in",line = 2, cex = 1.3, adj = 0.95, font=2) ;
#add Temp  plot
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=F, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
#coordinates for the Temp max min polygon
#  View(University.Park.Temp.Pcp) ; str(University.Park.Temp.Pcp)  ; names(University.Park.Temp.Pcp)
#add axis with appropriate labels
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range[2],by='day'), font=2, cex.axis=1.2)
seq(DateTime.range[1],DateTime.range[2],by='day')
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=F, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=F, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
#add axis with appropriate labels
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range[2],by='day'), font=2, cex.axis=1.2)
#axis.POSIXct(side=1,University.Park.Temp.Pcp$Date.Year.Month, at=seq(DateTime.range[1],DateTime.range[2],length.out=5),labels=format(seq(DateTime.range[1],DateTime.range[2],length.out=5),"%Y")) ;
axis(side=2,at=pretty(seq(-25,40,length=15)), font=2, cex.axis=1.2) ;
DateTime.range<-as.Date(range(O2.Data.Alli.data$TIME)) ;
DateTime.range
DateTime.range<-as.Date(range(O2.Data.Alli.data$TIME)) ;
#add axis with appropriate labels
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range[2],by='day'), font=2, cex.axis=1.2)
at=seq(DateTime.range[1],DateTime.range[2],by='day')
seq(DateTime.range[1],DateTime.range[2],by='day')
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range[2],by='day'), font=2, cex.axis=1.2)
axis(side=2,at=pretty(seq(-25,40,length=15)), font=2, cex.axis=1.2) ;
par(mar=c(3,5,1,4)+0.1);
#  plot the pcp
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
# add axis with proper labeling
axis(side = 3, pos = 0, tck = 0,xaxt = "n") ;
axis(side = 4, at = pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))),labels=pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))), font=2, cex.axis=1.1) ;
mtext(side=4,"Precipitation in",line = 2, cex = 1.3, adj = 0.95, font=2) ;
#add Temp  plot
par(new=T);
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=F, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
#add axis with appropriate labels
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range[2],by='day'), font=2, cex.axis=1.2)
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=T, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
par(mar=c(3,5,1,4)+0.1);
#  plot the pcp
# plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
# add axis with proper labeling
axis(side = 3, pos = 0, tck = 0,xaxt = "n") ;
axis(side = 4, at = pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))),labels=pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))), font=2, cex.axis=1.1) ;
mtext(side=4,"Precipitation in",line = 2, cex = 1.3, adj = 0.95, font=2) ;
#add O2 plot
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=T, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
par(mar=c(3,5,1,4)+0.1);
plot the pcp
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
# add axis with proper labeling
axis(side = 3, pos = 0, tck = 0,xaxt = "n") ;
axis(side = 4, at = pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))),labels=pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))), font=2, cex.axis=1.1) ;
mtext(side=4,"Precipitation in",line = 2, cex = 1.3, adj = 0.95, font=2) ;
#add O2 plot
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=T, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=F, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range[2],by='day'), font=2, cex.axis=1.2)
#axis.POSIXct(side=1,University.Park.Temp.Pcp$Date.Year.Month, at=seq(DateTime.range[1],DateTime.range[2],length.out=5),labels=format(seq(DateTime.range[1],DateTime.range[2],length.out=5),"%Y")) ;
axis(side=2,at=pretty(seq(-25,40,length=15)), font=2, cex.axis=1.2) ;
DateTime.range[1]
DateTime.range[2]
#add axis with appropriate labels
axis.Date(side=1, at=Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")], font=2, cex.axis=1.2)
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=F, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
#coordinates for the Temp max min polygon
#  View(University.Park.Temp.Pcp) ; str(University.Park.Temp.Pcp)  ; names(University.Park.Temp.Pcp)
#add axis with appropriate labels
axis.Date(side=1, at=Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")], font=2, cex.axis=1.2)
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range[2],by='day'), font=2, cex.axis=1.2)
axis.Date(side=1, at=Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")], font=2, cex.axis=1.2)
Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")]
# plot the pcp
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
# add axis with proper labeling
axis(side = 3, pos = 0, tck = 0,xaxt = "n") ;
axis(side = 4, at = pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))),labels=pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))), font=2, cex.axis=1.1) ;
mtext(side=4,"Precipitation in",line = 2, cex = 1.3, adj = 0.95, font=2) ;
#add O2 plot
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=F, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
axis(1)
axis.Date(side=1, font=2, cex.axis=1.2)
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range[2]), font=2, cex.axis=1.2)
seq(DateTime.range[1],DateTime.range[2])
seq.Date(DateTime.range[1],DateTime.range[2])
seq.Date(DateTime.range[1],DateTime.range[2], by="day")
axis.Date(side=1, at=seq.Date(DateTime.range[1],DateTime.range[2], by="day"), font=2, cex.axis=1.2)
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=F, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
axis.Date(side=1, at=seq.Date(DateTime.range[1],DateTime.range[2], by="day"), font=2, cex.axis=1.2)
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=T, yaxt='n', ylab="Temperature °C",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=T, yaxt='n', ylab="O2",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK", yaxt='n', ylab="O2",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=F, yaxt='n', ylab="O2",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1);
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK",axes=F, yaxt='n', ylab="O2",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1, bty="l");
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK", yaxt='n', ylab="O2",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1, bty="l");
par(mar=c(3,5,1,4)+0.1);
# plot the pcp
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
# add axis with proper labeling
axis(side = 3, pos = 0, tck = 0,xaxt = "n") ;
axis(side = 4, at = pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))),labels=pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))), font=2, cex.axis=1.1) ;
mtext(side=4,"Precipitation in",line = 2, cex = 1.3, adj = 0.95, font=2) ;
#add O2 plot
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK", yaxt='n', ylab="O2",xlab="Date", ylim =c(-25,40),font.lab=2,cex.lab=1.3,cex.axis=1.1, bty="l");
O2.range<-range(O2.Data.Alli.data$B1CloverA5cmO2_Med)
O2.range
O2.range<-range(O2.Data.Alli.data$B1CloverA5cmO2_Med,O2.Data.Alli.data$B1CloverA20cmO2_Med )
O2.range
O2.range<-range(O2.Data.Alli.data$B1CloverA5cmO2_Med)
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK", yaxt='n', ylab="O2",xlab="Date", ylim = O2.range ,font.lab=2,cex.lab=1.3,cex.axis=1.1, bty="l");
par(mar=c(3,5,1,4)+0.1);
# plot the pcp
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
# add axis with proper labeling
axis(side = 3, pos = 0, tck = 0,xaxt = "n") ;
axis(side = 4, at = pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))),labels=pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))), font=2, cex.axis=1.1) ;
mtext(side=4,"Precipitation in",line = 2, cex = 1.3, adj = 0.95, font=2) ;
#add O2 plot
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='l',col="BLACK", yaxt='n', ylab="O2",xlab="Date", ylim = O2.range ,font.lab=2,cex.lab=1.3,cex.axis=1.1, bty="l");
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='o',col="RED", yaxt='n', ylab="O2",xlab="Date", ylim = O2.range ,font.lab=2,cex.lab=1.3,cex.axis=1.1, bty="l");
points(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC20cmO2_Med, type='o',col="BLUE", yaxt='n', ylab="O2",xlab="Date", ylim = O2.range ,font.lab=2,cex.lab=1.3,cex.axis=1.1, bty="l");
par(mar=c(3,5,1,4)+0.1);
# plot the pcp
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
# add axis with proper labeling
axis(side = 3, pos = 0, tck = 0,xaxt = "n") ;
axis(side = 4, at = pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))),labels=pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))), font=2, cex.axis=1.1) ;
mtext(side=4,"Precipitation in",line = 2, cex = 1.3, adj = 0.95, font=2) ;
#add O2 plot
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC5cmO2_Med, type='o',col="RED", yaxt='n', ylab="O2",xlab="Date", ylim = O2.range ,font.lab=2,cex.lab=1.3,cex.axis=1.1, bty="l");
points(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverC20cmO2_Med, type='o',col="BLUE", yaxt='n', ylab="O2",xlab="Date", ylim = O2.range ,font.lab=2,cex.lab=1.3,cex.axis=1.1, bty="l");
#coordinates for the Temp max min polygon
#  View(University.Park.Temp.Pcp) ; str(University.Park.Temp.Pcp)  ; names(University.Park.Temp.Pcp)
#add axis with appropriate labels
axis.Date(side=1, at=Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")], font=2, cex.axis=1.2)
axis.Date(side=1, at=seq(DateTime.range[1],DateTime.range[2],by='day'), font=2, cex.axis=1.2)
#axis.POSIXct(side=1,University.Park.Temp.Pcp$Date.Year.Month, at=seq(DateTime.range[1],DateTime.range[2],length.out=5),labels=format(seq(DateTime.range[1],DateTime.range[2],length.out=5),"%Y")) ;
axis(side=2,at=pretty(seq(-25,40,length=15)), font=2, cex.axis=1.2) ;
par(mar=c(3,5,1,4)+0.1);
# plot the pcp
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
# add axis with proper labeling
axis(side = 3, pos = 0, tck = 0,xaxt = "n") ;
axis(side = 4, at = pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))),labels=pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))), font=2, cex.axis=1.1) ;
mtext(side=4,"Precipitation in",line = 2, cex = 1.3, adj = 0.95, font=2) ;
#add O2 plot
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverB5cmO2_Med, type='o',col="RED", yaxt='n', ylab="O2",xlab="Date", ylim = O2.range ,font.lab=2,cex.lab=1.3,cex.axis=1.1, bty="l");
points(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverB20cmO2_Med, type='o',col="BLUE", yaxt='n', ylab="O2",xlab="Date", ylim = O2.range ,font.lab=2,cex.lab=1.3,cex.axis=1.1, bty="l");
par(mar=c(3,5,1,4)+0.1);
# plot the pcp
plot(Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("Date.Time")],Precipitation[which(Precipitation$Date.Time>=min(O2.Data.Alli.data$TIME) & Precipitation$Date.Time<=max(O2.Data.Alli.data$TIME)),c("PRCP.H.1..in.")], type="h",yaxt="n",xaxt="n", ylim=rev(c(0,4*Pcp.range[2])), bty="n", main="University Park Airport",col="light blue",ylab=NA,xlab=NA, lwd=3, font.main=2,cex.main=1.5);
# add axis with proper labeling
axis(side = 3, pos = 0, tck = 0,xaxt = "n") ;
axis(side = 4, at = pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))),labels=pretty(seq(0, floor(Pcp.range[2] + 1),length=c(5))), font=2, cex.axis=1.1) ;
mtext(side=4,"Precipitation in",line = 2, cex = 1.3, adj = 0.95, font=2) ;
#add O2 plot
par(new=T);
par(mar=c(5.1, 4.1, 4.1 ,2.1))
plot(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverA5cmO2_Med, type='o',col="RED", yaxt='n', ylab="O2",xlab="Date", ylim = O2.range ,font.lab=2,cex.lab=1.3,cex.axis=1.1, bty="l");
points(O2.Data.Alli.data$TIME,O2.Data.Alli.data$B1CloverA20cmO2_Med, type='o',col="BLUE", yaxt='n', ylab="O2",xlab="Date", ylim = O2.range ,font.lab=2,cex.lab=1.3,cex.axis=1.1, bty="l");
str(O2.Data.Alli.data)
